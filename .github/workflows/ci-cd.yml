name: DevSecOps CI/CD 

on:
    push:
        branches: ["main"]

env: 
    IMAGE_TAG: ${{ github.sha }}
    REGION: ${{ secrets.AWS_REGION }}

jobs:
    checkov:
        name: Escaneo Terraform con Checkov
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4 

            - name: Instalar Checkov 
              uses: pip install checkov 

            - name: Ejecutar Checkov 
              run: checkov -d terraform/ 

    sonarqube:
        name: Analisis de codigo con Sonarqube 
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4 

            - name: Configurar Java 
              uses: actions/setup-java@v3 
              with:
                distribution: 'temurin'
                java-version: '17'

            - name: Instalar Sonar Scanner 
              run: |
                curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
                unzip sonar-scanner.zip -d $HOME
                echo "$HOME/sonar-scanner-*/bin" >> $GITHUB_PATH 

            - name: Ejecutar Sonar Scanner 
              run: sonar-scanner 
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    trivy:
        name: Escaneo de imagen con Trivy   
        runs-on: ubuntu-latest
        steps:
          - name: Checkout repo
            uses: actions/checkout@v4 
            
          - name: Instalar Trivy
            run: |
              sudo apt-get update && sudo apt-get install -y wget
              wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.50.2_Linux-64bit.deb
              sudo dpkg -i trivy_0.50.2_Linux-64bit.deb

          - name: Build imagen local
            run: docker build -t flask-app:latest ./app

          - name: Ejecutar Trivy
            run: trivy image --exit-code 1 --severity HIGH,CRITICAL flask-app:latest

    docker:
      name: Build & Push Docker a ECR 
      runs-on: ubuntu-latest 
      needs: [checkov, trivy, sonarqube]
      steps:
        - name: Checkout repo
          uses: actions/checkout@v4 

        - name: Configurar AWS 
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.REGION }}

        - name: Login en Amazon ECR
          id: login-ecr 
          uses: aws-actions/amazon-ecr-login@v2 

        - name: Construir imagen
          run: |
            docker build -t ${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} ./app

        - name: Tag y Push
          run: |
            docker tag ${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
            docker push ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}